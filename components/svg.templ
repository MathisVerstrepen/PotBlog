package components

templ Svg() {
<svg aria-hidden="true" id="svgdefs" version="2" xmlns="http://www.w3.org/2000/svg">
    <defs>
        <symbol id="teapot" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
            <path d="M10.29 3h3.42a2 2 0 0 1 1.988 1.78l1.555 14a2 2 0 0 1 -1.988 2.22h-6.53a2 2 0 0 1 -1.988 -2.22l1.555 -14a2 2 0 0 1 1.988 -1.78z" />
            <path d="M7.47 12.5l-4.257 -5.019a.899 .899 0 0 1 .69 -1.481h13.09a3 3 0 0 1 3.007 3v3c0 1.657 -1.346 3 -3.007 3" />
            <path d="M7 17h10" />
        </symbol>
    </defs>
</svg>
}

css svg_stroke_color(color string, size string, padding string) {
    color: { templ.SafeCSSProperty(color) };
    width: { size };
    height: { size };
    padding: { padding };
}

func getSize(sizeLabel string) string {
    switch sizeLabel {
    case "small":
        return "1.15rem"
    case "medium":
        return "1.75rem"
    case "large":
        return "2.25rem"
    case "auto":
        return "auto"
    default:
        return "1.75rem"
    }
}

func GetPadding(sizeLabel string) string {
    switch sizeLabel {
    case "small":
        return "0.125rem"
    case "medium":
        return "0.25rem"
    case "large":
        return "0.33rem"
    case "auto":
        return "auto"
    default:
        return "0.25rem"
    }
}

templ UseIcon(iconName string, color string, size string) {
    <svg class={ svg_stroke_color(color, getSize(size), GetPadding(size)) } viewBox="0 0 24 24">
        <use href={"#" + iconName}></use>
    </svg>
}